// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id           String    @id
  username     String    @unique
  displayName  String
  email        String?   @unique
  passwordHash String?
  googleId     String?   @unique
  avatarUrl    String?
  bio          String?
  sessions     Session[]
  createdAt    DateTime  @default(now())
  Cart         Cart[]

  @@map("users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Product {
  id          String @id @default(cuid()) @map("_id")
  name        String
  description String
  imageUrl    String
  price       Int

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  CartItem  CartItem[]

  @@map("products")
}

model Cart {
  id        String     @id @default(cuid()) @map("_id")
  items     CartItem[]
  userId    String
  users     User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  updatedAt DateTime   @updatedAt
  createdAt DateTime   @default(now())

  @@map("carts")
}

model CartItem {
  id        String  @id @default(cuid()) @map("_id")
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  cartId    String
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  quantity  Int

  @@map("cartitems")
}
